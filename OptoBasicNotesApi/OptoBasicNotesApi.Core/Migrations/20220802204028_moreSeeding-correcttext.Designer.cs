// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OptoBasicNotesApi.Core;

#nullable disable

namespace OptoBasicNotesApi.Core.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220802204028_moreSeeding-correcttext")]
    partial class moreSeedingcorrecttext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OptoBasicNotesApi.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryName")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Some category 1"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Some category 2"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Some category 3"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Some category 4"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Some category 5"
                        });
                });

            modelBuilder.Entity("OptoBasicNotesApi.Core.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoteBody")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NoteBody = "## My Seeded Note \n With a test script <script>alert('inject')</script>"
                        });
                });

            modelBuilder.Entity("OptoBasicNotesApi.Core.Models.NoteCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("NoteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("NoteId");

                    b.ToTable("NoteCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            NoteId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            NoteId = 1
                        });
                });

            modelBuilder.Entity("OptoBasicNotesApi.Core.Models.NoteCategory", b =>
                {
                    b.HasOne("OptoBasicNotesApi.Core.Models.Category", "Category")
                        .WithMany("NoteCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptoBasicNotesApi.Core.Models.Note", "Note")
                        .WithMany("NoteCategories")
                        .HasForeignKey("NoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Note");
                });

            modelBuilder.Entity("OptoBasicNotesApi.Core.Models.Category", b =>
                {
                    b.Navigation("NoteCategories");
                });

            modelBuilder.Entity("OptoBasicNotesApi.Core.Models.Note", b =>
                {
                    b.Navigation("NoteCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
